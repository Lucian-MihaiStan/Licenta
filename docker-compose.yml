version: '3.3'

services:
  db_users:
    image: 'postgres:13.1-alpine'
    container_name: db_users
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: parklive_user_db
      POSTGRES_USER: parklive_admin
      POSTGRES_PASSWORD: admin_pass
    volumes:
      - parklive_user_db_volume:/var/lib/postgresql/data
    networks:
      - DB_USERS-network
      - UI-network

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: parklive_db
      POSTGRES_USER: parklive_user
      POSTGRES_PASSWORD: parklive_pass
    volumes:
      - parklive_db_volume:/var/lib/postgresql/data
    networks:
      - API-network

  backend_app:
    image: 'parklive-backend-image'
    container_name: backend_app
    build:
      context: be/livepark/livepark
      dockerfile: backend.Dockerfile
    depends_on:
      - db
      - db_users
    ports:
      - "9090:9090"
    environment:
      - SERVER_PORT=9090
      - SPRING_GLOBALDATASOURCE_URL=jdbc:postgresql://db:5432/parklive_db
      - SPRING_GLOBALDATASOURCE_USERNAME=parklive_user
      - SPRING_GLOBALDATASOURCE_PASSWORD=parklive_pass
      - SPRING_GLOBALDATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_USERDATASOURCE_URL=jdbc:postgresql://db_users:5432/parklive_user_db
      - SPRING_USERDATASOURCE_USERNAME=parklive_admin
      - SPRING_USERDATASOURCE_PASSWORD=admin_pass
      - SPRING_USERDATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    networks:
      - API-network
      - DB_USERS-network
      - UI-network

  frontend_app:
    image: 'parklive-frontend-image'
    container_name: frontend_app
    build:
      context: fe/livepark_app
      dockerfile: Dockerfile
    depends_on:
      - backend_app
    ports:
      - "3000:3000"
    networks:
      - UI-network

  mongo_service:
    build:
      context: ./be/livepark_mongo
      dockerfile: Dockerfile
    image: livepark_mongo:0.1
    environment:
      - PYTHONUNBUFFERED=1
    container_name: mongo_service
    depends_on:
      - database_mongo
    restart: always
    ports:
      - 5002:5002 # TODO Lucian must delete this after dockerize all
    networks:
      - DB_mongo_wrapper-network

  database_mongo:
    image: mongo:latest
    restart: always
    container_name: database_mongo
    environment:
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_DATABASE: database_mongo
    networks:
      - DB_mongo_wrapper-network
      - DB_mongo-network
    volumes:
      - ./database/mongo/database-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./database/mongo/mongo_data:/data/db

  adminer:
    image: adminer:4.8.1
    restart: always
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: database
      ADMINER_DESIGN: ${ADMINER_DESIGN:-nette}
    ports:
      - "8080:8080"
    networks:
      - DB_mongo-network
      - DB_USERS-network
      - API-network
    depends_on:
      - database_mongo
      - db_users
      - db

networks:
  DB_mongo_wrapper-network:
  DB_mongo-network:
  DB_USERS-network:
  API-network:
  UI-network:
volumes:
  parklive_db_volume:
  parklive_user_db_volume: